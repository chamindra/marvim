*marvim.txt*       MAcro Repository for VIM. v0.5
*'MARVIM'* *'marvim'*
===============================================================================
#                                                                             #
#         m    m   mm   mmmmm  m    m mmmmm  m    m                           #
#         ##  ##   ##   #   "# "m  m"   #    ##  ##                           #
#         # ## #  #  #  #mmmm"  #  #    #    # ## #                           #
#         # "" #  #mm#  #   "m  "mm"    #    # "" #                           #
#         #    # #    # #    "   ##   mm#mm  #    #                           #
#                                                                             #
===============================================================================
CONTENTS                                                      *marvim-contents*

    1. Intro........................................|marvim-intro|
    2. Features.....................................|marvim-features|
    3. Usage........................................|marvim-usage|
    4. Options......................................|marvim-options|
    5. Tips.........................................|marvim-tips|
    6. Chaneglog....................................|marvim-changelog|

===============================================================================
INTRO                                                            *marvim-intro*

A plugin for saving and sharing vim macros and template files.

This plugin let you save your vim macros and code templates into the disk as
files, and recall those plugins later, for an easy use.

===============================================================================
FEATURES                                                      *marvim-features*

* Recording of VIM macros into persistent storage for future use
* Auto-complete based recursive search and load of stored VIM macros
* Visually select and save templates into persistent storage
* Macro name-spaces, to permit organization of macros
* Support for a default namespace based on filetype
* Supports a shared macro repository for a team on a shared directory
* Macro menu items in GVIM version for all main actions

===============================================================================
USAGE                                                            *marvim-usage*

                                                            *marvim-save-macro*
Store a new macro to the repository
  1. Record macro as usual into q register (i.e. qq..<macro keystrokes>..q)
  2. Press save macro key <F3> (default) in normal mode
  3. Enter the macro name when prompted after the prefix (a prefix will be
     provided based on the filetype)
  4. Macro is now store in the repository

                                                         *marvim-save-template*
Save template into repository
  1. Select area you want to save in visual mode
  2. Press the macro save button <F3> (default) in visual mode
  3. Enter the template name when prompted (a prefix will be provided based
     on the filetype)
  4. Template is now saved in repository

                                                            *marvim-call-macro*
Recall macro/template through a search
  1. Press the macro find key <F2> (default) in normal mode
  2. Enter a search string when prompted (a prefix will be put by default,
     Which can be deleted)
  3. Press <Tab> or <Control-D> to auto-complete until you find the macro
  4. Macro is now run and also loaded for further use into the q register

                                                           *marvim-reply-lines*
Replay last loaded macro on multiple lines for each line
  1. Select the area you want the macro to run on in visual mode
  2. Press the macro find key <F3> (default) in visual mode
  3. Macro in q register is replayed for every line

===============================================================================
OPTIONS                                                        *marvim-options*

Overview:~

  |loaded_marvim|...............Disable the plugin.
  |marvim_register|.............Register to use in marvim.
  |marvim_use_find_key|.........Flag to use/not use the marvim search.
  |marvim_find_key|.............Key to activate marvim search.
  |marvim_use_store_key|........Flag to use/not use the marvim store.
  |marvim_store_key|............Key to activate marvim store.
  |marvim_prefix|...............Flag to use/not use a prefix with the filetype.
  |marvim_store|................Path to the base directory of the plugin.

-------------------------------------------------------------------------------
Detailed descriptions and default values:~

                                              *loaded_marvim* *'g:loaded_marvim'*
'loaded_marvim'      boolean (default: 0)
                     global
    An option to disable the loading of marvim completely.

                                          *marvim_register* *'g:marvim_register'*
'marvim_register'    string (default: 'q')
                     global
    The register to use as Marvin's register. Any macro operation would run
    with this register.
    This must be a valid regular register value. I.e., a single lower letter.

                                  *marvim_use_find_key* *'g:marvim_use_find_key'*
'marvim_use_find_key'    string (default: v:true)
                         global
    A flag to indicate whether the marvim_find_key mapping would be use. To
    avoid mapping the find key set this value to v:false or 0.

                                          *marvim_find_key* *'g:marvim_find_key'*
'marvim_find_key'    string (default: '<F2>')
                     global
    The keys to use to activate the search function of marvim.
    Set this key to '' or use g:marvim_use_find_key to not map this function
    at all.

                                *marvim_use_store_key* *'g:marvim_use_store_key'*
'marvim_use_store_key'    string (default: v:true)
                          global
    A flag to indicate whether the marvim_store_key mapping would be use. To
    avoid mapping the store key set this value to v:false or 0.

                                        *marvim_store_key* *'g:marvim_store_key'*
'marvim_store_key'   string (default: '<F3>')
                     global
    The keys to use for storing a new marco/template into the repository.
    Set this key to '' or use g:marvim_use_store_key to not map this function
    at all.

                                              *marvim_prefix* *'g:marvim_prefix'*
'marvim_prefix'      boolean (default: 1)
                     global
    Decide whether to use the filetype prefix when storing/searching for
    macros and templates in the system.

                                                *marvim_store* *'g:marvim_store'*
'marvim_store'       string (default: '~/.marvim')
                     global
    The base directory for the marvim repository to use. Every file would be
    relative to this directory.

===============================================================================
TIPS                                                              *marvim-tips*

* <Space> can be very effective as the macro find key
* use the namespaces to organize a directory for each language
* use a naming convention for your macros to make it easy to find. E.g.:

  php:if-block
  php:strip-tags
  php:mysql-select-block
  php:mysql-update-block

* if multiple people are working on the same project, consider a shared
  marvim store to share templates and macros to improve team
  productivity

* share your marvim marco stores with each other and also with the
  central repository at the plugin in github.

* You can use wildcards for macros names (when searching for them). It can
  let you type only part of the macro file name. For info on the wildcards
  See |wildcards| for the use of special characters.

===============================================================================
CHANGELOG                                                    *marvim-changelog*

V 0.5~
  + Added help files and changed the readme to be markdown.
  + Fixed issues with files with multiple dots in them.

V 0.4~
  + Now supports autocompletion when searching for macros
  + The filetype gives the default namespace for storage and retrieval
  + Refactoring of functions for namespace to directory mappings

V 0.3~
  + New namespace features for macro that map to macro sub-directories
  + Supported the creation of macros and templates in a namespace
  + Creates namespace directories if they do not exist
  + Added the ability to point to a different macro store
  + The above permits a shared macro/template repository within a team
  + Refactored code to make macro and template saving a function
  + Fixed bug on windows listing of macros without whole path name

V 0.2~
  + Made script windows compatible
  + Makes the macro home directory if it does not exist
  + Recursively looks up base repository sub-directories for macros
  + Creates a macro menu for the GUI versions
  + Changed default macro input register to q
  + Made it easy to define configuration details in vimrc
  + Abstracted hotkeys so that they can be defined in the vimrc easily
  + Fixed the breaking on spaces in directory paths
  + Changed template extension to mvt for ease
  + Changed naming conventions to avoid namespace conflict

V 0.1~
  + Platform independent script (almost ;-)
  + recording of vim version with macro
  + redefinition of macro_home and macro_register

===============================================================================
vim:ft=help:et:ts=2:sw=2:sts=2:norl
